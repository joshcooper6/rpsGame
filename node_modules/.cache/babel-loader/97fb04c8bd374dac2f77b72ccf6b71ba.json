{"ast":null,"code":"var _jsxFileName = \"/Users/Queen/Documents/GitHub/rpsGame/src/index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport ReactDOM from 'react-dom';\nimport Header from './Header';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst root = document.getElementById('root');\n\nfunction App() {\n  _s();\n\n  const outcomes = [\"rock\", \"paper\", \"scissors\"];\n  const randomNumber = Math.floor(Math.random() * outcomes.length);\n  const [outcome, setOutcome] = useState();\n  const [random, setRandom] = useState(randomNumber);\n  const [playerScore, setPlayerScore] = useState(10);\n\n  const generateTurn = () => {\n    const secondRandom = Math.floor(Math.random() * outcomes.length);\n    setRandom(secondRandom);\n\n    if (random == outcomes.length) {\n      return setOutcome(outcomes[0]);\n    } else {\n      return setOutcome(outcomes[randomNumber]);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        alignSelf: \"center\",\n        margin: \"0 auto\",\n        textAlign: \"center\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: outcome\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: generateTurn,\n        children: \"Outcome\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n}\n\n_s(App, \"eInQge42KYI22EMEqtcU4NGZKFA=\");\n\n_c = App;\nReactDOM.render( /*#__PURE__*/_jsxDEV(App, {}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 34,\n  columnNumber: 17\n}, this), root);\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/Queen/Documents/GitHub/rpsGame/src/index.js"],"names":["React","useState","ReactDOM","Header","root","document","getElementById","App","outcomes","randomNumber","Math","floor","random","length","outcome","setOutcome","setRandom","playerScore","setPlayerScore","generateTurn","secondRandom","alignSelf","margin","textAlign","render"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAOC,MAAP,MAAmB,UAAnB;;;AACA,MAAMC,IAAI,GAAGC,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAAb;;AAEA,SAASC,GAAT,GAAgB;AAAA;;AACZ,QAAMC,QAAQ,GAAG,CAAC,MAAD,EAAS,OAAT,EAAkB,UAAlB,CAAjB;AACA,QAAMC,YAAY,GAAGC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgBJ,QAAQ,CAACK,MAApC,CAArB;AAEA,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBd,QAAQ,EAAtC;AACA,QAAM,CAACW,MAAD,EAASI,SAAT,IAAsBf,QAAQ,CAACQ,YAAD,CAApC;AAEA,QAAM,CAACQ,WAAD,EAAcC,cAAd,IAAgCjB,QAAQ,CAAC,EAAD,CAA9C;;AAEA,QAAMkB,YAAY,GAAG,MAAM;AACvB,UAAMC,YAAY,GAAGV,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgBJ,QAAQ,CAACK,MAApC,CAArB;AACAG,IAAAA,SAAS,CAACI,YAAD,CAAT;;AACA,QAAIR,MAAM,IAAIJ,QAAQ,CAACK,MAAvB,EAA+B;AAC3B,aAAOE,UAAU,CAACP,QAAQ,CAAC,CAAD,CAAT,CAAjB;AACH,KAFD,MAEO;AACH,aAAOO,UAAU,CAACP,QAAQ,CAACC,YAAD,CAAT,CAAjB;AACH;AACJ,GARD;;AAUA,sBAAO;AAAA,4BACH,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,YADG,eAEH;AAAK,MAAA,KAAK,EAAE;AAACY,QAAAA,SAAS,EAAE,QAAZ;AAAsBC,QAAAA,MAAM,EAAE,QAA9B;AAAwCC,QAAAA,SAAS,EAAE;AAAnD,OAAZ;AAAA,8BACI;AAAA,kBAAKT;AAAL;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAQ,QAAA,OAAO,EAAEK,YAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAFG;AAAA,kBAAP;AAOH;;GA1BQZ,G;;KAAAA,G;AA4BTL,QAAQ,CAACsB,MAAT,eAAgB,QAAC,GAAD;AAAA;AAAA;AAAA;AAAA,QAAhB,EAAyBpB,IAAzB","sourcesContent":["import React, { useState } from 'react';\nimport ReactDOM from 'react-dom';\nimport Header from './Header';\nconst root = document.getElementById('root');\n\nfunction App () { \n    const outcomes = [\"rock\", \"paper\", \"scissors\"];\n    const randomNumber = Math.floor(Math.random() * outcomes.length);\n\n    const [outcome, setOutcome] = useState();\n    const [random, setRandom] = useState(randomNumber);\n\n    const [playerScore, setPlayerScore] = useState(10)\n\n    const generateTurn = () => {\n        const secondRandom = Math.floor(Math.random() * outcomes.length);\n        setRandom(secondRandom);\n        if (random == outcomes.length) {\n            return setOutcome(outcomes[0]);\n        } else {\n            return setOutcome(outcomes[randomNumber]);\n        }\n    }\n\n    return(<>\n        <Header />\n        <div style={{alignSelf: \"center\", margin: \"0 auto\", textAlign: \"center\"}}>\n            <h1>{outcome}</h1>\n            <button onClick={generateTurn}>Outcome</button>\n        </div>\n    </>)\n}\n\nReactDOM.render(<App />, root)"]},"metadata":{},"sourceType":"module"}