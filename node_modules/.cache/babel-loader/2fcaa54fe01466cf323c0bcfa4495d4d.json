{"ast":null,"code":"var _jsxFileName = \"/Users/Queen/Documents/GitHub/rpsGame/src/index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, createContext, useEffect } from 'react';\nimport ReactDOM from 'react-dom';\nimport Header from './Header';\nimport { randomNumber } from './randomNumber';\nimport { winningRules } from './winningRules';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const ScoreContext = /*#__PURE__*/createContext(null);\n\nfunction App() {\n  _s();\n\n  const outcomes = [\"rock\", \"paper\", \"scissors\"];\n  const [outcome, setOutcome] = useState();\n  const [random, setRandom] = useState(randomNumber(outcomes));\n  const [playerScore, setPlayerScore] = useState(0);\n  const [compScore, setCompScore] = useState(0);\n  const [playerChoice, setPlayerChoice] = useState('rock');\n  const [compChoice, setCompChoice] = useState();\n\n  const handleChange = input => {\n    setOutcome('Thinking...');\n    setRandom(randomNumber(outcomes));\n\n    if (random == outcomes.length) {\n      setCompChoice(outcomes[0]);\n    } else {\n      setCompChoice(outcomes[random]);\n    }\n\n    ;\n    setPlayerChoice(input);\n    let timeout = setTimeout(() => {\n      if (winningRules(playerChoice, compChoice) == 'win') {\n        setOutcome('Player Wins!');\n        setPlayerScore(prevScore => prevScore + 1);\n      } else if (winningRules(playerChoice, compChoice) == 'lose') {\n        setOutcome('Computer Wins!');\n        setCompScore(prevScore => prevScore + 1);\n      } else if (winningRules(playerChoice, compChoice) == 'draw') {\n        setOutcome(`It's a draw...`);\n      }\n    }, 2000);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(ScoreContext.Provider, {\n      value: {\n        playerScore,\n        setPlayerScore,\n        compScore,\n        setCompScore\n      },\n      children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          alignSelf: \"center\",\n          margin: \"0 auto\",\n          textAlign: \"center\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: outcome\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: [\"Computer Chose: \", compChoice]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: [\"Player Chose: \", playerChoice]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: renderResult,\n          children: \"Outcome\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: renderResult,\n          children: \"Outcome\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: renderResult,\n          children: \"Outcome\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n}\n\n_s(App, \"1HFCscnrnf068mEf30sl7tnvf6Y=\");\n\n_c = App;\nReactDOM.render( /*#__PURE__*/_jsxDEV(App, {}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 63,\n  columnNumber: 17\n}, this), document.getElementById('root'));\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/Queen/Documents/GitHub/rpsGame/src/index.js"],"names":["React","useState","createContext","useEffect","ReactDOM","Header","randomNumber","winningRules","ScoreContext","App","outcomes","outcome","setOutcome","random","setRandom","playerScore","setPlayerScore","compScore","setCompScore","playerChoice","setPlayerChoice","compChoice","setCompChoice","handleChange","input","length","timeout","setTimeout","prevScore","alignSelf","margin","textAlign","renderResult","render","document","getElementById"],"mappings":"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","sourcesContent":["import React, { useState, createContext, useEffect } from 'react';\nimport ReactDOM from 'react-dom';\nimport Header from './Header';\n\nimport { randomNumber } from './randomNumber';\nimport { winningRules } from './winningRules';\n\nexport const ScoreContext = createContext(null);\n\nfunction App () { \n    const outcomes = [\"rock\", \"paper\", \"scissors\"];\n\n    const [outcome, setOutcome] = useState();\n    const [random, setRandom] = useState(randomNumber(outcomes));\n\n    const [playerScore, setPlayerScore] = useState(0);\n    const [compScore, setCompScore] = useState(0);\n\n    const [playerChoice, setPlayerChoice] = useState('rock');\n    const [compChoice, setCompChoice] = useState();\n\n    const handleChange = (input) => {\n        setOutcome('Thinking...');\n        setRandom(randomNumber(outcomes));\n\n        if (random == outcomes.length) {\n            setCompChoice(outcomes[0]);\n        } else {\n            setCompChoice(outcomes[random]);\n        };\n\n        setPlayerChoice(input);\n\n        let timeout = setTimeout(() => {\n            if (winningRules(playerChoice, compChoice) == 'win') {\n                setOutcome('Player Wins!')\n                setPlayerScore((prevScore) => prevScore + 1)\n            } else if (winningRules(playerChoice, compChoice) == 'lose') {\n                setOutcome('Computer Wins!')\n                setCompScore((prevScore) => prevScore + 1)\n            } else if (winningRules(playerChoice, compChoice) == 'draw') {\n                setOutcome(`It's a draw...`)\n            }\n        }, 2000)\n    }\n\n\n    return(<>\n        <ScoreContext.Provider value={{playerScore, setPlayerScore, compScore, setCompScore}}>\n            <Header />\n            <div style={{alignSelf: \"center\", margin: \"0 auto\", textAlign: \"center\"}}>\n                <h1>{outcome}</h1>\n                <h2>Computer Chose: {compChoice}</h2>\n                <h2>Player Chose: {playerChoice}</h2>                \n                <button onClick={renderResult}>Outcome</button>\n                <button onClick={renderResult}>Outcome</button>\n                <button onClick={renderResult}>Outcome</button>\n            </div>\n        </ScoreContext.Provider>\n    </>)\n}\n\nReactDOM.render(<App />, document.getElementById('root'))"]},"metadata":{},"sourceType":"module"}