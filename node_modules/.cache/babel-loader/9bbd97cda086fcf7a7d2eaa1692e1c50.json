{"ast":null,"code":"var _jsxFileName = \"/Users/Queen/Documents/GitHub/rpsGame/src/index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, createContext, useEffect } from 'react';\nimport ReactDOM from 'react-dom';\nimport Header from './Header';\nimport Game from './Game';\nimport { icons } from './data';\nimport { randomNumber } from './randomNumber';\nimport { winningRules, outcomes } from './winningRules';\nexport const ScoreContext = /*#__PURE__*/createContext(null);\nimport styled, { keyframes } from 'styled-components';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Bounce = keyframes`\n    0% {\n        transform: scale(10) translateY(10em);\n    }\n    25% {\n        transform: translateY(0); \n    } \n    50% {\n        transform: translateY(10em);\n    }\n    100% {\n        transform: translateY(0);\n    }\n\n`;\nconst MotionHands = styled.img`\n    height: 200px;\n`;\n_c = MotionHands;\nconst HandWrapper = styled.div`\n    animation: ${Bounce} 1000ms infinite alternate;\n    animation-iteration-count: 2;\n`;\n_c2 = HandWrapper;\nconst ContentWrapper = styled.div``;\n_c3 = ContentWrapper;\n\nfunction App() {\n  _s();\n\n  const [outcome, setOutcome] = useState();\n  const [random, setRandom] = useState(randomNumber(outcomes));\n  const [playerScore, setPlayerScore] = useState(0);\n  const [compScore, setCompScore] = useState(0);\n  const [playerChoice, setPlayerChoice] = useState();\n  const [compChoice, setCompChoice] = useState();\n  const [playerImage, setPlayerImage] = useState('');\n  const [compImage, setCompImage] = useState('');\n  const [bClick, setBClick] = useState(false);\n  const [hidden, setHidden] = useState(true);\n\n  const handleChange = input => {\n    setHidden(false);\n    setBClick(!bClick);\n    setOutcome('Thinking...');\n    setRandom(randomNumber(outcomes));\n    setCompChoice(outcomes[random]);\n    setPlayerChoice(input);\n    let a = icons.filter(icon => playerChoice == icon.name);\n    let b = icons.filter(icon => compChoice == icon.name);\n    setCompImage(b[0].src);\n    setPlayerImage(a[0].src);\n  };\n\n  useEffect(() => {\n    let timeout = setTimeout(() => {\n      setHidden(true);\n\n      if (winningRules(playerChoice, compChoice) == 'win') {\n        setOutcome('Player Wins!');\n        setPlayerScore(prevScore => prevScore + 1);\n      } else if (winningRules(playerChoice, compChoice) == 'lose') {\n        setOutcome('Computer Wins!');\n        setCompScore(prevScore => prevScore + 1);\n      } else if (winningRules(playerChoice, compChoice) == 'draw') {\n        setOutcome(`It's a draw...`);\n      }\n    }, 2000);\n  }, [bClick]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(ScoreContext.Provider, {\n      value: {\n        playerScore,\n        outcome,\n        compChoice,\n        playerChoice,\n        handleChange,\n        hidden,\n        setHidden\n      },\n      children: /*#__PURE__*/_jsxDEV(ContentWrapper, {\n        children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 13\n        }, this), hidden ? /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(Game, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            style: {\n              minWidth: '200px',\n              height: '50px',\n              borderRadius: '1em',\n              border: 'none',\n              background: 'transparent',\n              border: `1px solid white`,\n              color: 'white',\n              fontWeight: 'bold',\n              fontSize: '1.1em',\n              textAlign: 'center',\n              justifySelf: 'center',\n              alignSelf: 'center'\n            },\n            children: \"Rules\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true) : /*#__PURE__*/_jsxDEV(HandWrapper, {\n          children: [/*#__PURE__*/_jsxDEV(MotionHands, {\n            src: icons[0].src,\n            className: \"motion-hands\",\n            style: {\n              margin: '1em',\n              transform: 'rotate(95deg)'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(MotionHands, {\n            src: icons[0].src,\n            className: \"motion-hands\",\n            style: {\n              margin: '1em',\n              transform: 'rotate(95deg) scaleY(-1)'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 19\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n}\n\n_s(App, \"p32JFhZnlEN7vgTZbR5SCk0Lepk=\");\n\n_c4 = App;\nReactDOM.render( /*#__PURE__*/_jsxDEV(App, {}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 124,\n  columnNumber: 17\n}, this), document.getElementById('root'));\n\nvar _c, _c2, _c3, _c4;\n\n$RefreshReg$(_c, \"MotionHands\");\n$RefreshReg$(_c2, \"HandWrapper\");\n$RefreshReg$(_c3, \"ContentWrapper\");\n$RefreshReg$(_c4, \"App\");","map":{"version":3,"sources":["/Users/Queen/Documents/GitHub/rpsGame/src/index.js"],"names":["React","useState","createContext","useEffect","ReactDOM","Header","Game","icons","randomNumber","winningRules","outcomes","ScoreContext","styled","keyframes","Bounce","MotionHands","img","HandWrapper","div","ContentWrapper","App","outcome","setOutcome","random","setRandom","playerScore","setPlayerScore","compScore","setCompScore","playerChoice","setPlayerChoice","compChoice","setCompChoice","playerImage","setPlayerImage","compImage","setCompImage","bClick","setBClick","hidden","setHidden","handleChange","input","a","filter","icon","name","b","src","timeout","setTimeout","prevScore","minWidth","height","borderRadius","border","background","color","fontWeight","fontSize","textAlign","justifySelf","alignSelf","margin","transform","render","document","getElementById"],"mappings":"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","sourcesContent":["import React, { useState, createContext, useEffect } from 'react';\nimport ReactDOM from 'react-dom';\nimport Header from './Header';\nimport Game from './Game'\nimport { icons } from './data';\n\nimport { randomNumber } from './randomNumber';\nimport { winningRules, outcomes } from './winningRules';\n\nexport const ScoreContext = createContext(null);\n\nimport styled, { keyframes } from 'styled-components';\n\nconst Bounce = keyframes`\n    0% {\n        transform: scale(10) translateY(10em);\n    }\n    25% {\n        transform: translateY(0); \n    } \n    50% {\n        transform: translateY(10em);\n    }\n    100% {\n        transform: translateY(0);\n    }\n\n`\n\nconst MotionHands = styled.img`\n    height: 200px;\n`\n\nconst HandWrapper = styled.div`\n    animation: ${Bounce} 1000ms infinite alternate;\n    animation-iteration-count: 2;\n`\n\nconst ContentWrapper = styled.div``\n\nfunction App() { \n    const [outcome, setOutcome] = useState();\n    const [random, setRandom] = useState(randomNumber(outcomes));\n\n    const [playerScore, setPlayerScore] = useState(0);\n    const [compScore, setCompScore] = useState(0);\n\n    const [playerChoice, setPlayerChoice] = useState();\n    const [compChoice, setCompChoice] = useState();\n\n    const [playerImage, setPlayerImage] = useState('');\n    const [compImage, setCompImage] = useState('');\n\n    const [bClick, setBClick] = useState(false);\n\n    const [hidden, setHidden] = useState(true);\n\n    const handleChange = (input) => {\n        setHidden(false);\n        setBClick(!bClick);\n        setOutcome('Thinking...');\n        setRandom(randomNumber(outcomes));\n        setCompChoice(outcomes[random]);\n        setPlayerChoice(input);\n\n        let a = icons.filter((icon) => playerChoice == icon.name);\n        let b = icons.filter((icon) => compChoice == icon.name);\n\n        setCompImage(b[0].src);\n        setPlayerImage(a[0].src);\n    };\n\n\n    useEffect(() => {\n        let timeout = setTimeout(() => {\n            setHidden(true);\n            if (winningRules(playerChoice, compChoice) == 'win') {\n                setOutcome('Player Wins!')\n                setPlayerScore((prevScore) => prevScore + 1)\n            } else if (winningRules(playerChoice, compChoice) == 'lose') {\n                setOutcome('Computer Wins!')\n                setCompScore((prevScore) => prevScore + 1)\n            } else if (winningRules(playerChoice, compChoice) == 'draw') {\n                setOutcome(`It's a draw...`)\n            }\n            \n\n        }, 2000)\n    }, [bClick]);\n    \n\n    return(<>\n        <ScoreContext.Provider value={{playerScore, outcome, compChoice, playerChoice, handleChange, hidden, setHidden}}>\n            <ContentWrapper>\n            <Header />\n            \n            { hidden ? <>\n                <Game />\n                <button style={{\n                    minWidth: '200px',\n                    height: '50px',\n                    borderRadius: '1em',\n                    border: 'none',\n                    background: 'transparent',\n                    border: `1px solid white`,\n                    color: 'white',\n                    fontWeight: 'bold',\n                    fontSize: '1.1em',\n                    textAlign: 'center',\n                    justifySelf:'center',\n                    alignSelf: 'center'\n                }}>Rules</button>\n            </> : <HandWrapper>\n                <MotionHands src={icons[0].src} className='motion-hands' style={{margin: '1em', transform: 'rotate(95deg)'}}/>\n                <MotionHands src={icons[0].src} className='motion-hands' style={{margin: '1em', transform: 'rotate(95deg) scaleY(-1)'}}/> \n            </HandWrapper> }\n\n\n        </ContentWrapper>\n        </ScoreContext.Provider>\n    </>)\n}\n\nReactDOM.render(<App />, document.getElementById('root'))"]},"metadata":{},"sourceType":"module"}