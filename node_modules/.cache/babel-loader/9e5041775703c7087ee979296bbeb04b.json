{"ast":null,"code":"var _jsxFileName = \"/Users/Queen/Documents/GitHub/rpsGame/src/Game.js\",\n    _s = $RefreshSig$();\n\nimport React, { useContext } from 'react';\nimport { ScoreContext } from '.';\nimport { icons } from './data';\nimport styled from 'styled-components';\nimport triangle from './images/bg-triangle.svg';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Btn = styled.button`\n    height: 150px;\n    width: 150px;\n    border-radius: 100%;\n    border: none;\n    position: relative;\n    background: ${props => props.gradient};\n    z-index: 1;\n\n    &:hover {\n        cursor: pointer;\n    }\n\n    &:before {\n        content: '  ';\n        position: absolute;\n        box-shadow: 0em 0em 1em black;\n        border-radius: 100%;\n        transform: scale(1.1);\n        top: -4px; \n        bottom: -4px;\n        left: -4px; \n        right: -4px;\n        background: ${props => props.gradient};\n        z-index: -1;\n    }\n`;\n_c = Btn;\nconst ButtonWrap = styled.div`\n    display: grid;\n    width: 500px;\n    border: 1px solid red;\n    height: 500px;\n    grid-template-columns: repeat(3, 1fr);\n    grid-template-rows: repeat(3, 1fr);\n`;\n_c2 = ButtonWrap;\nexport default function Game() {\n  _s();\n\n  const {\n    outcome,\n    compChoice,\n    playerChoice,\n    handleChange\n  } = useContext(ScoreContext);\n  const buttons = icons.map(icon => {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(Btn, {\n        style: {\n          gridArea: icon.area,\n          gridColumnStart: icon.colStart,\n          gridColumnEnd: icon.colEnd,\n          gridRowStart: icon.rowStart,\n          gridRowEnd: icon.rowEnd\n        },\n        gradient: icon.gradient,\n        onClick: () => handleChange(icon.name),\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: icon.src\n        }, icon.name, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 17\n        }, this)\n      }, icon.name, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 13\n      }, this)\n    }, void 0, false);\n  });\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        alignSelf: \"center\",\n        margin: \"0 auto\",\n        textAlign: \"center\"\n      },\n      children: /*#__PURE__*/_jsxDEV(ButtonWrap, {\n        children: buttons\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n}\n\n_s(Game, \"SO+9tQ9X+8PrHQkIawxYc0xnt30=\");\n\n_c3 = Game;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"Btn\");\n$RefreshReg$(_c2, \"ButtonWrap\");\n$RefreshReg$(_c3, \"Game\");","map":{"version":3,"sources":["/Users/Queen/Documents/GitHub/rpsGame/src/Game.js"],"names":["React","useContext","ScoreContext","icons","styled","triangle","Btn","button","props","gradient","ButtonWrap","div","Game","outcome","compChoice","playerChoice","handleChange","buttons","map","icon","gridArea","area","gridColumnStart","colStart","gridColumnEnd","colEnd","gridRowStart","rowStart","gridRowEnd","rowEnd","name","src","alignSelf","margin","textAlign"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AACA,SAASC,YAAT,QAA6B,GAA7B;AACA,SAASC,KAAT,QAAsB,QAAtB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,OAAOC,QAAP,MAAqB,0BAArB;;;AAEA,MAAMC,GAAG,GAAGF,MAAM,CAACG,MAAO;AAC1B;AACA;AACA;AACA;AACA;AACA,kBAAkBC,KAAK,IAAIA,KAAK,CAACC,QAAS;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsBD,KAAK,IAAIA,KAAK,CAACC,QAAS;AAC9C;AACA;AACA,CA1BA;KAAMH,G;AA2BN,MAAMI,UAAU,GAAGN,MAAM,CAACO,GAAI;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA,CAPA;MAAMD,U;AASN,eAAe,SAASE,IAAT,GAAgB;AAAA;;AAC3B,QAAM;AAAEC,IAAAA,OAAF;AAAWC,IAAAA,UAAX;AAAuBC,IAAAA,YAAvB;AAAqCC,IAAAA;AAArC,MAAsDf,UAAU,CAACC,YAAD,CAAtE;AAEA,QAAMe,OAAO,GAAGd,KAAK,CAACe,GAAN,CAAWC,IAAD,IAAU;AAChC,wBAAO;AAAA,6BACH,QAAC,GAAD;AACI,QAAA,KAAK,EAAE;AACHC,UAAAA,QAAQ,EAAED,IAAI,CAACE,IADZ;AAEHC,UAAAA,eAAe,EAAEH,IAAI,CAACI,QAFnB;AAGHC,UAAAA,aAAa,EAAEL,IAAI,CAACM,MAHjB;AAIHC,UAAAA,YAAY,EAAEP,IAAI,CAACQ,QAJhB;AAKHC,UAAAA,UAAU,EAAET,IAAI,CAACU;AALd,SADX;AASI,QAAA,QAAQ,EAAEV,IAAI,CAACV,QATnB;AAUI,QAAA,OAAO,EAAE,MAAMO,YAAY,CAACG,IAAI,CAACW,IAAN,CAV/B;AAAA,+BAYI;AAAqB,UAAA,GAAG,EAAEX,IAAI,CAACY;AAA/B,WAAUZ,IAAI,CAACW,IAAf;AAAA;AAAA;AAAA;AAAA;AAZJ,SAQSX,IAAI,CAACW,IARd;AAAA;AAAA;AAAA;AAAA;AADG,qBAAP;AAgBH,GAjBe,CAAhB;AAoBA,sBAAO;AAAA,2BACH;AAAK,MAAA,KAAK,EAAE;AAACE,QAAAA,SAAS,EAAE,QAAZ;AAAsBC,QAAAA,MAAM,EAAE,QAA9B;AAAwCC,QAAAA,SAAS,EAAE;AAAnD,OAAZ;AAAA,6BACI,QAAC,UAAD;AAAA,kBACKjB;AADL;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADG,mBAAP;AAOH;;GA9BuBL,I;;MAAAA,I","sourcesContent":["import React, { useContext } from 'react';\nimport { ScoreContext } from '.';\nimport { icons } from './data';\nimport styled from 'styled-components';\nimport triangle from './images/bg-triangle.svg';\n\nconst Btn = styled.button`\n    height: 150px;\n    width: 150px;\n    border-radius: 100%;\n    border: none;\n    position: relative;\n    background: ${props => props.gradient};\n    z-index: 1;\n\n    &:hover {\n        cursor: pointer;\n    }\n\n    &:before {\n        content: '  ';\n        position: absolute;\n        box-shadow: 0em 0em 1em black;\n        border-radius: 100%;\n        transform: scale(1.1);\n        top: -4px; \n        bottom: -4px;\n        left: -4px; \n        right: -4px;\n        background: ${props => props.gradient};\n        z-index: -1;\n    }\n`\nconst ButtonWrap = styled.div`\n    display: grid;\n    width: 500px;\n    border: 1px solid red;\n    height: 500px;\n    grid-template-columns: repeat(3, 1fr);\n    grid-template-rows: repeat(3, 1fr);\n`\n\nexport default function Game() {\n    const { outcome, compChoice, playerChoice, handleChange } = useContext(ScoreContext);\n\n    const buttons = icons.map((icon) => { \n        return <>\n            <Btn \n                style={{\n                    gridArea: icon.area, \n                    gridColumnStart: icon.colStart,\n                    gridColumnEnd: icon.colEnd,\n                    gridRowStart: icon.rowStart,\n                    gridRowEnd: icon.rowEnd\n                }} \n                key={icon.name} \n                gradient={icon.gradient} \n                onClick={() => handleChange(icon.name)}\n            >\n                <img key={icon.name} src={icon.src} />\n            </Btn>\n        </> \n    })\n\n\n    return(<>\n        <div style={{alignSelf: \"center\", margin: \"0 auto\", textAlign: \"center\"}}>\n            <ButtonWrap>\n                {buttons}\n            </ButtonWrap>    \n        </div>\n    </>)\n}"]},"metadata":{},"sourceType":"module"}